<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boot.security.server.dao.MonthPayDao">

	<sql id="where">
		<where>
			t.pay = p.id
			<if test="params.id != null and params.id != ''">
				and id = #{params.id} 
			</if>
			<if test="params.month != null and params.month != ''">
				and month = #{params.month} 
			</if>
			<if test="params.pay != null and params.pay != ''">
				and pay = #{params.pay} 
			</if>
			<if test="params.paymoney != null and params.paymoney != ''">
				and paymoney = #{params.paymoney} 
			</if>
			<if test="params.paytime != null and params.paytime != ''">
				and paytime = #{params.paytime} 
			</if>
			<if test="params.ordercd != null and params.ordercd != ''">
				and ordercd = #{params.ordercd} 
			</if>
			<if test="params.consumer != null and params.consumer != ''">
				and consumer = #{params.consumer} 
			</if>
			<if test="params.cashier != null and params.cashier != ''">
				and cashier = #{params.cashier} 
			</if>
		
		</where>
	</sql>

	<select id="count" resultType="int">
		select count(1) from month_pay t,pay_type p
		<include refid="where" />
	</select>

	<select id="list" resultType="MonthPay">
		select
			t.id,
			t.`month`,
			p.typename,
			t.paymoney,
			t.paytime,
			t.ordercd,
			t.consumer,
			t.cashier
		from month_pay t,pay_type p
		<include refid="where" />
		${params.orderBy}
		limit #{offset}, #{limit}
	</select>

	<update id="update">
		update month_pay t
		<set>
			<if test="month != null">
				month = #{month}, 
			</if>
			<if test="pay != null">
				pay = #{pay}, 
			</if>
			<if test="paymoney != null">
				paymoney = #{paymoney}, 
			</if>
			<if test="paytime != null">
				paytime = #{paytime}, 
			</if>
			<if test="ordercd != null">
				ordercd = #{ordercd}, 
			</if>
			<if test="consumer != null">
				consumer = #{consumer}, 
			</if>
			<if test="cashier != null">
				cashier = #{cashier}, 
			</if>

		</set>

		where t.id = #{id}
	</update>

	<select id="getpayType" resultType="MonthPay">
		SELECT
			mp.`month`,
			mp.consumer,
			pt.typename,
			sum(CASE pt.typename WHEN '交通出行' THEN mp.paymoney ELSE 0 END) AS trafficTravelMoney,
			sum(CASE pt.typename WHEN '住房缴费' THEN mp.paymoney ELSE 0 END) AS housingPayMentMoney,
			sum(CASE pt.typename WHEN '健康' THEN mp.paymoney ELSE 0 END) AS healthMoney,
			sum(CASE pt.typename WHEN '生活日用' THEN mp.paymoney ELSE 0 END) AS dailyLifeMoney,
			sum(CASE pt.typename WHEN '其他消费' THEN mp.paymoney ELSE 0 END) AS OtherCunsumptionMoney
		FROM  month_pay mp LEFT JOIN pay_type pt ON mp.pay = pt.id
		WHERE mp.`month` = '9' and mp.consumer='谭锦威' GROUP BY mp.consumer,pt.typename;
	</select>
</mapper>
